sudo: required
dist: trusty
language: node_js
branches:
  only:
  - rc-master
  - rc-develop
node_js:
- 8.4.0
cache:
- pip
- yarn
install:
- pip install --user awscli
before_script:
- yarn
script:
- sh -c "if [ '$TRAVIS_BRANCH' = 'rc-master']; then yarn run build --prefix-paths; fi"
- sh -c "if [ '$TRAVIS_BRANCH' = 'rc-develop' ]; then yarn run build; fi"
deploy:
  provider: script
  script: test $TRAVIS_BRANCH = "rc-develop" && AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws s3 sync --acl public-read --sse --delete public s3://sendgrid-knowledge-center-staging
  skip_cleanup: true
  on:
    repo: sendgrid/docs
    branch: rc-master
  provider: script
  script: test $TRAVIS_BRANCH = "rc-master" && AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws s3 sync --acl public-read --sse --delete public s3://sendgrid-knowledge-center-staging
  skip_cleanup: true
  on:
    repo: sendgrid/docs
    branch: rc-develop
after_deploy:
- aws configure set preview.cloudfront true
- test $TRAVIS_BRANCH = "rc-master" && AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID_PROD --paths "/*"
- test $TRAVIS_BRANCH = "rc-develop" && AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID_STAGE --paths "/*"